{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "summary": "User login",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "summary": "Register new user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Token refreshed successfully"
          },
          "401": {
            "description": "Invalid refresh token"
          }
        },
        "summary": "Refresh access token using refresh token cookie",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logged out successfully"
          }
        },
        "summary": "User logout",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/verify-email": {
      "post": {
        "operationId": "AuthController_verifyEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully"
          },
          "400": {
            "description": "Invalid verification code"
          }
        },
        "summary": "Verify email address",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/roles": {
      "post": {
        "operationId": "RoleController_createRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new role",
        "tags": [
          "Roles"
        ]
      },
      "get": {
        "operationId": "RoleController_getRoles",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all roles",
        "tags": [
          "Roles"
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "operationId": "RoleController_getRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a role by ID",
        "tags": [
          "Roles"
        ]
      },
      "patch": {
        "operationId": "RoleController_updateRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a role",
        "tags": [
          "Roles"
        ]
      },
      "delete": {
        "operationId": "RoleController_deleteRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a role",
        "tags": [
          "Roles"
        ]
      }
    },
    "/roles/{roleId}/position": {
      "patch": {
        "operationId": "RoleController_updatePosition",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update role position",
        "tags": [
          "Roles"
        ]
      }
    },
    "/roles/{roleId}/permissions": {
      "patch": {
        "operationId": "RoleController_togglePermissions",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleRolePermissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Toggle role permissions",
        "tags": [
          "Roles"
        ]
      }
    },
    "/roles/{roleId}/assign/{personId}": {
      "post": {
        "operationId": "RoleController_assignRole",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "personId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Assign a role to a person",
        "tags": [
          "Roles"
        ]
      }
    },
    "/roles/{roleId}/unassign/{personId}": {
      "delete": {
        "operationId": "RoleController_unassignRole",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "personId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Unassign a role from a person",
        "tags": [
          "Roles"
        ]
      }
    },
    "/permissions": {
      "get": {
        "operationId": "PermissionController_getPermissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Permissions"
        ]
      }
    },
    "/permissions/dashboard": {
      "get": {
        "operationId": "PermissionController_getPermissionDashboard",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Permissions"
        ]
      }
    },
    "/people": {
      "post": {
        "operationId": "PersonController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new person",
        "tags": [
          "people"
        ]
      },
      "get": {
        "operationId": "PersonController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all people",
        "tags": [
          "people"
        ]
      }
    },
    "/people/{id}": {
      "get": {
        "operationId": "PersonController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "Person not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a person by id",
        "tags": [
          "people"
        ]
      },
      "patch": {
        "operationId": "PersonController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePersonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "Person not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a person",
        "tags": [
          "people"
        ]
      },
      "delete": {
        "operationId": "PersonController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "Person not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Soft delete a person",
        "tags": [
          "people"
        ]
      }
    }
  },
  "info": {
    "title": "BAWES ERP API",
    "description": "The BAWES ERP system API documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "User password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "User password"
          },
          "nameEn": {
            "type": "string",
            "example": "John Doe",
            "description": "User name in English"
          },
          "nameAr": {
            "type": "string",
            "example": "جون دو",
            "description": "User name in Arabic"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "VerifyEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "description": "Email address to verify"
          },
          "code": {
            "type": "string",
            "example": "123456",
            "description": "Verification code sent to email"
          }
        },
        "required": [
          "email",
          "code"
        ]
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the role"
          },
          "description": {
            "type": "string",
            "description": "Description of the role"
          },
          "color": {
            "type": "string",
            "description": "Hex color code for the role"
          },
          "permissions": {
            "description": "Initial permission codes to assign",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the role"
          },
          "description": {
            "type": "string",
            "description": "The description of the role"
          },
          "permissionIds": {
            "description": "List of permission IDs assigned to the role",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isSystem": {
            "type": "boolean",
            "description": "Whether this is a system role"
          },
          "sortOrder": {
            "type": "number",
            "description": "Sort order for display"
          }
        },
        "required": [
          "name",
          "description",
          "permissionIds",
          "isSystem",
          "sortOrder"
        ]
      },
      "ToggleRolePermissionDto": {
        "type": "object",
        "properties": {
          "permissionCode": {
            "type": "string",
            "description": "The permission code to toggle"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether to enable or disable the permission"
          }
        },
        "required": [
          "permissionCode",
          "enabled"
        ]
      },
      "CreatePersonDto": {
        "type": "object",
        "properties": {
          "nameEn": {
            "type": "string",
            "description": "English name of the person"
          },
          "nameAr": {
            "type": "string",
            "description": "Arabic name of the person"
          },
          "passwordHash": {
            "type": "string",
            "description": "Password hash for authentication"
          },
          "accountStatus": {
            "type": "string",
            "description": "Account status",
            "default": "active"
          }
        },
        "required": [
          "passwordHash",
          "accountStatus"
        ]
      },
      "Person": {
        "type": "object",
        "properties": {}
      },
      "UpdatePersonDto": {
        "type": "object",
        "properties": {
          "nameEn": {
            "type": "string",
            "description": "English name of the person"
          },
          "nameAr": {
            "type": "string",
            "description": "Arabic name of the person"
          },
          "accountStatus": {
            "type": "string",
            "description": "Account status",
            "default": "active"
          }
        }
      }
    }
  }
}