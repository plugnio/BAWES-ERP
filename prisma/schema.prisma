generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Account model for bank accounts
model Account {
  /// Unique identifier for the account
  id              String            @id @default(cuid())
  /// Date and time when the account was created
  createdAt       DateTime          @default(now())
  /// Date and time when the account was last updated
  updatedAt       DateTime          @updatedAt
  /// Label of the account, used for display and identification. optional
  label           String?
  /// Type of the account (savings, checking, credit card, debit card, etc.)
  type            String
  /// Balance of the account
  balance         Decimal
  /// Indicates whether the account is deleted (soft delete)
  isDeleted       Boolean           @default(false)
  
  /// Optional reference to the associated bank
  bankId          String?
  /// Optional relation to the bank
  bank            Bank?             @relation(fields: [bankId], references: [id])
  /// Account balances relation
  AccountBalances AccountBalances[]
}

/// Account balances model, used to store the balance of an account at a specific time when scraping from bank records
model AccountBalances {
  /// Unique identifier for the account balance
  id         String   @id @default(cuid())
  /// Date and time when the account balance was created
  createdAt  DateTime @default(now())
  /// Balance of the account
  balance    Decimal
  /// Source of the account balance (eg: bank statement, bank API, scraper, etc.)
  source     String

  /// Account ID
  accountId String
  /// Account Relation
  account   Account @relation(fields: [accountId], references: [id])
  // Map the model to the database table
  @@map("account_balances")
}

/// Bank model
model Bank {
  /// Unique identifier for the bank
  id           String    @id @default(cuid())
  /// Date and time when the bank was created
  createdAt    DateTime  @default(now())
  /// Date and time when the bank was last updated
  updatedAt    DateTime  @updatedAt
  /// English name of the bank
  nameEn       String
  /// Arabic name of the bank
  nameAr       String
  /// IBAN (International Bank Account Number) code prefix of the bank
  ibanCode     String    @unique
  /// SWIFT (Society for Worldwide Interbank Financial Telecommunication) code of the bank
  swiftCode    String
  /// Abbreviated code for the bank (internal usage for ABK system)
  codeAbk      Int?
  /// Address of the bank (headquarters or branch)
  address      String
  /// Type of transfer the bank supports (e.g., LCL, TRF)
  transferType String?
  /// Indicates whether the record is deleted (soft delete)
  isDeleted    Boolean   @default(false)

  /// Relation to accounts
  accounts     Account[]
}
